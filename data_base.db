CREATE DATABASE  IF NOT EXISTS `aclc` ;
USE `aclc`;
SHOW TABLES;


-- tables names: classes, teachers, students, courseclasscontact, courses, grades, secretary, schedule, assignments

drop table if exists assignments;
drop table if exists schedules;
drop table if exists secretary;
drop table if exists grades;
drop table if exists courseclasscontact;
drop table if exists courses;
drop table if exists students;
drop table if exists teachers;
drop table if exists classes;
--
-- Table structure for table `classes`
--
CREATE TABLE IF NOT EXISTS `classes` (
  `classId` int NOT NULL,
  `className` varchar(255) DEFAULT NULL,
  `passingAvarage` int DEFAULT NULL,
  PRIMARY KEY (`classId`)
) ;

--
-- Table structure for table `teachers`
--

CREATE TABLE IF NOT EXISTS `teachers` (
  `id` int NOT NULL,
  `firstName` varchar(255) DEFAULT NULL,
  `lastName` varchar(255) DEFAULT NULL,
  `password` int DEFAULT NULL,
  PRIMARY KEY (`id`)
);

--
-- Table structure for table `students`
--
CREATE TABLE IF NOT EXISTS `students` (
  `id` int NOT NULL,
  `firstName` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8_general_ci DEFAULT NULL,
  `lastName` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8_general_ci DEFAULT NULL,
  `studentClass` int DEFAULT NULL,
  `password` int DEFAULT NULL,
  `url` nvarchar(255),
  PRIMARY KEY (`id`),
  FOREIGN KEY (`studentClass`) REFERENCES `classes` (`classId`)
);

--
-- Table structure for table `courses`
--
CREATE TABLE IF NOT EXISTS `courses` (
  `courseId` int NOT NULL AUTO_INCREMENT,
  `teacherId` int DEFAULT NULL,
  `passingGrade` int DEFAULT NULL,
  `courseName` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`courseId`),
  FOREIGN KEY (`teacherId`) REFERENCES `teachers` (`id`)
);

--
-- Table structure for table `courseclasscontact`
--
CREATE TABLE IF NOT EXISTS `courseclasscontact` (
  `classId` int NOT NULL,
  `courseId` int NOT NULL,
  PRIMARY KEY (`classId`, `courseId`),
  FOREIGN KEY (`classId`) REFERENCES `classes` (`classId`),
  FOREIGN KEY (`courseId`) REFERENCES `courses` (`courseId`)
) ;

--
-- Table structure for table `grades`
--
CREATE TABLE IF NOT EXISTS `grades` (
  `courseId` int NOT NULL,
  `studentId` int NOT NULL,
  `grade` int DEFAULT NULL,
  PRIMARY KEY (`studentId`, `courseId`),
  FOREIGN KEY (`studentId`) REFERENCES `students` (`id`),
  FOREIGN KEY (`courseId`) REFERENCES `courses` (`courseId`)
) ;

--
-- Table structure for table `secretary`
--
CREATE TABLE IF NOT EXISTS `secretary` (
  `id` int not NULL,
  `firstName` varchar(255) DEFAULT NULL,
  `lastName` varchar(255)DEFAULT NULL,
  `password` int DEFAULT NULL
);

--
-- Table structure for table `schedule`
--
CREATE TABLE IF NOT EXISTS `schedules`(
id int NOT NULL AUTO_INCREMENT,
studentId int,
data longtext,
primary key (`id`),
FOREIGN KEY (`studentId`) REFERENCES `students` (`id`));

--
-- Table structure for table `assignments`
--
CREATE TABLE IF NOT EXISTS `assignments`(
id int NOT NULL AUTO_INCREMENT,
studentId int,
courseId int,
submissionDate datetime,
url nvarchar(255) not null,
primary key (`id`),
FOREIGN KEY (`studentId`) REFERENCES `students` (`id`),
FOREIGN KEY (`courseId`) REFERENCES `courses` (`courseId`)
);

--
-- Dumping data for table `classes`
--
INSERT INTO `classes` VALUES (1,'Software engineering',60),(2,'Graphic design',75),(3,'Quicq Web API Class',75);

--
-- Dumping data for table `teachers`
--
INSERT INTO `teachers` VALUES (1,'Tzipi','Cohen',111),(22,'Rachel','Levi',852),(44,'Chani','Israely',678),
	(111,'Leah','Kitov',8585),(214127391,'Chaya','Lipshitz',1);

--
-- Dumping data for table `students`
--
INSERT INTO `students` VALUES (4,'Devora','Levin',1,4,'das'),(55,'Ruthi','Kedem',1,123,'df'),
	(222,'Efrat','Chananov',2,456,'aert'),(555,'Yael','Shimony',2,789,'et'),(214426884,'Leah','Beckerman',3,6884,'ad');

-- Dumping data for table `courses`
--
INSERT INTO `courses` VALUES (1,1,60,'Infi'),(2,22,60,'C++'),(3,22,60,'Photoshop')
	,(4,44,60,'video'), (6,111,60,'afterEffects'), (7,214127391,60,'full_stack');


-- Dumping data for table `courseclasscontact`
--
INSERT INTO `courseclasscontact` VALUES (1,1), (1,2), (2,3), (2,4), (2,6), (3, 7);

select cc.courseId, students.id
from courseclasscontact as cc join students on cc.classId = students.studentClass;
--
-- Dumping data for table `grades`
--
INSERT INTO `grades` VALUES (1,4,50),(2,4,50),(1,55,1020),(2,55,98),(3,222,50),
	(4,222,82),(6,222,99),(3,555,50),(4,555,82),(6,555,99),(7,214426884,99);

--
-- Dumping data for table `secretary`
--
INSERT INTO `secretary` VALUES (88888,'Tamar','Yaakovi',789);

--
-- Dumping data for table `schedules`
--
INSERT INTO `schedules` (studentId,data) VALUES (4, 'hello');
